
import java.awt.Color;
import java.util.ArrayList;
import oru.inf.InfDB;
import oru.inf.InfException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author macbook
 */
public class Utrustning extends javax.swing.JFrame {

        private InfDB idb;

    /**
     * Creates new form Utrustning
     */
    public Utrustning(InfDB idb) {
        initComponents();
        this.idb = idb;
        txtfEquipCapacity.setVisible(false);



    }
    
    private String getEquipmentName() {
        String equipmentName = txtNamn.getText();
        return equipmentName;
    }
    
     private String getNewEquipmentId() {
        int lastNr = 0;
        String newId = "";
        
        try {            
            String query = "SELECT utrustnings_id FROM utrustning";
            ArrayList<String> result = idb.fetchColumn(query);
            int[] intResult = new int[result.size()];
            
            for (int i = 0; i < result.size(); i++) {
                intResult[i] = Integer.parseInt(result.get(i));
            }
            for (int element : intResult) {
                if (element >= lastNr) {
                    lastNr = element;
                }
            }
            int newIdInt = lastNr + 1;
            newId = String.valueOf(newIdInt);
        } catch (InfException ex) {
            System.out.println("Databasfel" + ex.getMessage());
        } catch (Exception ex) {
            System.out.println("Random fel" + ex.getMessage());
        }
        return newId;
    }
    
     
    private void addCommsEquipment() {
        String newId = getNewEquipmentId();
        try {
            String queryAddEquip = "INSERT INTO utrustning(utrustnings_id, benamning) VALUES ('" + newId + "','" + getEquipmentName() + "')";
            idb.insert(queryAddEquip);
            
            String queryAddWeaponCapacity = "INSERT INTO kommunikation (utrustnings_id, overforingsteknik) VALUES ('" + newId + "','" + txtfEquipCapacity.getText() + "')";
            idb.insert(queryAddWeaponCapacity);
        } catch (InfException ex) {
            System.out.println("Databasfel" + ex.getMessage());
        } catch (Exception ex) {
            System.out.println("Random fel" + ex.getMessage());
        }
        
    }
    
    
        private void addWeaponEquipment() {
        String newId = getNewEquipmentId();
        try {
            String queryAddEquip = "INSERT INTO utrustning(utrustnings_id, benamning) VALUES ('" + newId + "','" + getEquipmentName() + "')";
            idb.insert(queryAddEquip);
            
            String queryAddWeaponCapacity = "INSERT INTO vapen(utrustnings_id, kaliber) VALUES ('" + newId + "','" + txtfEquipCapacity.getText() + "')";
            idb.insert(queryAddWeaponCapacity);
        } catch (InfException ex) {
            System.out.println("Databasfel" + ex.getMessage());
        } catch (Exception ex) {
            System.out.println("Random fel" + ex.getMessage());
        }
        
    }

    private void addTechEquipment() {
        String newId = getNewEquipmentId();
        try {
            String queryAddEquip = "INSERT INTO utrustning(utrustnings_id, benamning) VALUES ('" + newId + "','" + getEquipmentName() + "')";
            idb.insert(queryAddEquip);
            
            String queryAddWeaponCapacity = "INSERT INTO teknik (utrustnings_id, kraftkalla) VALUES ('" + newId + "','" + txtfEquipCapacity.getText() + "')";
            idb.insert(queryAddWeaponCapacity);
        } catch (InfException ex) {
            System.out.println("Databasfel" + ex.getMessage());
        } catch (Exception ex) {
            System.out.println("Random fel" + ex.getMessage());
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblAddEquip = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNamn = new javax.swing.JTextField();
        lblEquipCategory = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtfEquipCapacity = new javax.swing.JTextField();
        lblEquipCapacity = new javax.swing.JLabel();
        lblMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Registrera utrustning:");

        lblAddEquip.setText("Lägg till vapen");

        jLabel3.setText("Namn:");

        lblEquipCategory.setText("Kategori:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Vapen", "Teknik", "Kommunikation" }));

        jButton1.setText("Lägg till");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblEquipCapacity.setText("Antal:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(lblAddEquip)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel5))
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEquipCategory)
                            .addComponent(jLabel3)
                            .addComponent(lblEquipCapacity))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfEquipCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(159, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(lblAddEquip)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEquipCategory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfEquipCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEquipCapacity))
                .addGap(31, 31, 31)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    lblMessage.setText(" ");

            if (Validering.validationTxt(txtNamn, lblMessage)
                && Validering.validationTxt(txtNamn, lblMessage)
                && Validering.validationCb(jComboBox1, lblMessage)
                && Validering.validationTxt(txtNamn, lblMessage)) {
            try {
                Boolean equipmentExist = false;
                Boolean equipmentAdded = false;
                String newEquipment = txtNamn.getText();
                
                String query = "SELECT benamning FROM utrustning";
                ArrayList<String> result = idb.fetchColumn(query);
                
                for (String element : result) {
                    if (newEquipment.toLowerCase().equals(element.toLowerCase())) {
                        equipmentExist = true;
                    }
                }
                if (equipmentExist) {
                    lblMessage.setText("Utrustningen finns redan!");
                } else {
                    
                    if (jComboBox1.getSelectedItem().equals("Vapen") && Validering.validationTxtInt(txtfEquipCapacity, lblMessage)) {
                        addWeaponEquipment();
                        equipmentAdded = true;
                    } else if (jComboBox1.getSelectedItem().equals("Teknik") && Validering.validationTxtNrOfChar(txtfEquipCapacity, lblMessage)) {
                        addTechEquipment();
                        equipmentAdded = true;
                    } else if (jComboBox1.getSelectedItem().equals("Kommunikation") && Validering.validationTxtNrOfChar(txtfEquipCapacity, lblMessage)) {
                        addCommsEquipment();
                        equipmentAdded = true;
                    }
                    
                }
                if (equipmentAdded) {
                    lblMessage.setForeground(Color.GREEN);
                    lblMessage.setText("Utrustningen har lagts till!");
                    txtNamn.setText("");
                    jComboBox1.setSelectedIndex(0);
                    txtfEquipCapacity.setText("");
                    lblEquipCapacity.setText(" ");
 
                }
            } catch (InfException ex) {
                System.out.println("Databasfel" + ex.getMessage());
            } catch (Exception ex) {
                System.out.println("Random fel" + ex.getMessage());
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblAddEquip;
    private javax.swing.JLabel lblEquipCapacity;
    private javax.swing.JLabel lblEquipCategory;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JTextField txtNamn;
    private javax.swing.JTextField txtfEquipCapacity;
    // End of variables declaration//GEN-END:variables
}
